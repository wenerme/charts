#!/bin/bash
build-repo() {
  local OPTIND o
  local charts archive out dry
  while getopts 'c:a:o:nh' o; do
    case $o in
      c)
        charts="$OPTARG";;
      a)
        archive="$OPTARG";;
      o)
        out="$OPTARG";;
      n)
        dry=1;;
      h|?)
        _build-repo-usage;;
    esac
  done
  shift $((OPTIND - 1))
  echo "Build repo $charts to $archive"
  rm -rf $archive
  mkdir -p $archive
  rm -f updates

  for chart in `ls $charts/*/Chart.yaml`; do
    dir=$(dirname $chart)
    name=$(basename $dir)
    ver=$(yq r $chart 'version')
    git add $dir

    echo found $name $ver - $dir
    # skip exists
    [ -e $out/$name-$ver.tgz ] || {
      echo "update $name $ver"
      echo -n "update $name:$ver ;" >> updates
      helm package -u -d $archive $name
    }
  done
  [ ! -e updates ] || {
    echo updated
    cat updates
    echo
    helm repo index $archive --merge $out/index.yaml
    [ -n "$dry" ] || rsync -av --ignore-existing --include '*.tgz' $archive/ $out/
    # diff --minimal $archive/index.yaml $out/index.yaml
    [ -n "$dry" ] || cp $archive/index.yaml $out/index.yaml
  }
}

_build-repo-usage() {
  echo "sync-chart [-aco]
  -c charts dir
  -a archive dir
  -o output dir
"
}
if [ $(basename $0) = "build-repo" ]; then
  set -e
  build-repo "$@"
fi
